name: "pr-build"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [el7, el8, el9, ubuntu18, ubuntu20, ubuntu22, arch]
        include:
          - version: el7
            container: andywick/arkime-build-7:5.0.0-3
            buildopt: "--kafka"
          - version: el8
            container: andywick/arkime-build-8:5.0.0-2
            buildopt: "--kafka --pfring"
          - version: el9
            container: andywick/arkime-build-9:5.0.0-2
            buildopt: "--kafka --pfring"
          - version: ubuntu18
            container: andywick/arkime-build-18:5.0.0-2
            buildopt: "--kafka --pfring"
          - version: ubuntu20
            container: andywick/arkime-build-20:5.0.0-2
            buildopt: "--kafka --pfring"
          - version: ubuntu22
            container: andywick/arkime-build-22:5.0.0-2
            buildopt: "--nothirdparty --kafka --pfring"
          - version: arch
            container: andywick/arkime-build-arch:5.0.0-2
            buildopt: "--kafka"
          - version: al2023
            container: andywick/arkime-build-al2023:5.0.0-2
            buildopt: "--kafka --pfring"

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: thirdparty
        run: |
          (cd / ; curl https://s3.amazonaws.com/files.molo.ch/snfmin.tar.gz | tar -zxvf -)
          if [ -d "/thirdparty" ]; then
            ln -s /thirdparty .
          fi

      - name: build 7
        if: ${{ matrix.version == 'el7' }}
        run: |
          scl enable devtoolset-9 rh-python36 "./easybutton-build.sh ${{ matrix.buildopt }} --rminstall"

      - name: build not 7
        if: ${{ matrix.version != 'el7' }}
        run: |
          ./easybutton-build.sh ${{ matrix.buildopt }} --rminstall

      - name: capture tests
        run: |
          (cd tests; ./tests.pl)

      - name: install
        run: |
          git config --global --add safe.directory `pwd`
          export PATH=/opt/arkime/bin:$PATH
          make install
          npm run lint
          cp -r capture/plugins/lua/samples /opt/arkime/lua

      - name: ui test
        if: ${{ matrix.version == 'el8' }}
        run: |
          export PATH=/opt/arkime/bin:$PATH
          npm run test
